// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalInfoSampleApp.Persistence;

namespace PersonalInfoSampleApp.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonalInfoSampleApp.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("PostalNumber")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("ResidenceNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PersonalInfoSampleApp.Model.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Powiat")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Voivodeship")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PersonalInfoSampleApp.Model.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CorrespondenceAddressId");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ResidenceAddressId");

                    b.Property<bool>("UseSameAddress");

                    b.HasKey("Id");

                    b.HasIndex("CorrespondenceAddressId");

                    b.HasIndex("ResidenceAddressId");

                    b.ToTable("PersonalInfo");
                });

            modelBuilder.Entity("PersonalInfoSampleApp.Model.Address", b =>
                {
                    b.HasOne("PersonalInfoSampleApp.Model.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonalInfoSampleApp.Model.PersonalInfo", b =>
                {
                    b.HasOne("PersonalInfoSampleApp.Model.Address", "CorrespondenceAddress")
                        .WithMany()
                        .HasForeignKey("CorrespondenceAddressId");

                    b.HasOne("PersonalInfoSampleApp.Model.Address", "ResidenceAddress")
                        .WithMany()
                        .HasForeignKey("ResidenceAddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
